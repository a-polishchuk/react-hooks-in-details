{"version":3,"file":"static/js/386.491f0eac.chunk.js","mappings":"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","sources":["8-DataFecthing/UsingReactQuery/AppContext.jsx","8-DataFecthing/UsingReactQuery/api/index.js","8-DataFecthing/UsingReactQuery/hooks/useRequest.js","8-DataFecthing/UsingReactQuery/hooks/useUser.js","8-DataFecthing/UsingReactQuery/TopPanel/Avatar/index.jsx","8-DataFecthing/UsingReactQuery/TopPanel/UserName/index.jsx","8-DataFecthing/UsingReactQuery/hooks/useTodoList.js","8-DataFecthing/UsingReactQuery/TopPanel/TodoCounter/index.jsx","8-DataFecthing/UsingReactQuery/hooks/useLastUpdated.js","8-DataFecthing/UsingReactQuery/TopPanel/LastUpdated/index.jsx","8-DataFecthing/UsingReactQuery/TopPanel/RefreshAll/index.jsx","8-DataFecthing/UsingReactQuery/TopPanel/index.jsx","8-DataFecthing/UsingReactQuery/Profile/index.jsx","8-DataFecthing/UsingReactQuery/TodoList/index.jsx","8-DataFecthing/UsingReactQuery/index.jsx"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\n\nconst USER_ID = 3;\nconst AppContext = createContext();\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}\n\nexport function AppContextProvider({ children }) {\n  const [userId, setUserId] = useState(USER_ID);\n\n  const value = {\n    userId,\n    setUserId,\n  };\n\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n}\n","import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/',\n});\n\nexport async function queryFunction({ queryKey }) {\n  const { data } = await axiosInstance.get(queryKey[0]);\n  return data;\n}\n","import { useCallback } from 'react';\nimport { useQuery, useQueryClient } from 'react-query';\nimport { queryFunction } from '../api';\n\nexport function useRequest(queryKey) {\n  const { isLoading, data, error } = useQuery(queryKey, queryFunction);\n  const queryClient = useQueryClient();\n\n  const invalidate = useCallback(() => {\n    queryClient.invalidateQueries(queryKey);\n  }, [queryClient, queryKey]);\n\n  return {\n    loading: isLoading,\n    data,\n    error,\n    invalidate,\n  };\n}\n","import { useAppContext } from '../AppContext';\nimport { useRequest } from './useRequest';\n\nexport function useUser() {\n  const { userId } = useAppContext();\n  return useRequest(`users/${userId}`);\n}\n","import { useUser } from '../../hooks/useUser';\nimport './index.css';\n\nfunction useUserInitials() {\n  const { data } = useUser();\n  const userName = data?.name ?? '';\n\n  return userName\n    .split(' ')\n    .map((w) => w.charAt(0))\n    .join('');\n}\n\nexport function Avatar() {\n  const initials = useUserInitials();\n\n  return <div className=\"rq-avatar\">{initials}</div>;\n}\n","import { useUser } from '../../hooks/useUser';\nimport './index.css';\n\nexport function UserName() {\n  const { data } = useUser();\n\n  return (\n    <>\n      <div className=\"rq-user-name\">{data?.name}</div>\n      <div className=\"rq-user-name-email\">{data?.email}</div>\n    </>\n  );\n}\n","import { useAppContext } from '../AppContext';\nimport { useRequest } from './useRequest';\n\nexport function useTodoList() {\n  const { userId } = useAppContext();\n  return useRequest(`todos?userId=${userId}`);\n}\n","import { useTodoList } from '../../hooks/useTodoList';\nimport './index.css';\n\nexport function TodoCounter() {\n  const { data } = useTodoList();\n  const todoCount = data?.length ?? 0;\n\n  return (\n    <div className=\"rq-todo-counter\">\n      Todos:\n      <br />\n      <strong>{todoCount}</strong>\n    </div>\n  );\n}\n","import { useQuery } from 'react-query';\n\nfunction fetchLastUpdated() {\n  return new Promise((resolve) => {\n    resolve(new Date());\n  });\n}\n\nconst OPTIONS = {\n  refetchInterval: 3000,\n};\n\nexport function useLastUpdated() {\n  const { isLoading, data, error } = useQuery(\n    'lastUpdated',\n    fetchLastUpdated,\n    OPTIONS\n  );\n\n  return {\n    loading: isLoading,\n    data,\n    error,\n  };\n}\n","import { useLastUpdated } from '../../hooks/useLastUpdated';\nimport './index.css';\n\nexport function LastUpdated() {\n  const { data } = useLastUpdated();\n  const formattedTime = data?.toLocaleTimeString() ?? '--';\n\n  return (\n    <div className=\"rq-last-updated\">\n      Last updated:\n      <br />\n      <strong>{formattedTime}</strong>\n    </div>\n  );\n}\n","import { useQueryClient } from 'react-query';\nimport { Button } from 'components/Button';\n\nexport function RefreshAll() {\n  const queryClient = useQueryClient();\n\n  const handleClick = () => {\n    queryClient.invalidateQueries();\n  };\n\n  return <Button text=\"Refresh all\" onClick={handleClick} />;\n}\n","import { Avatar } from './Avatar';\nimport { UserName } from './UserName';\nimport { TodoCounter } from './TodoCounter';\nimport { LastUpdated } from './LastUpdated';\nimport { RefreshAll } from './RefreshAll';\nimport './index.css';\n\nexport function TopPanel() {\n  return (\n    <div className=\"rq-top-panel\">\n      <div className=\"avatar-container\">\n        <Avatar />\n      </div>\n      <div className=\"user-name-container\">\n        <UserName />\n      </div>\n      <div className=\"widget-container\">\n        <TodoCounter />\n      </div>\n      <div className=\"widget-container\">\n        <LastUpdated />\n      </div>\n      <div className=\"widget-container\">\n        <RefreshAll />\n      </div>\n    </div>\n  );\n}\n","import { useUser } from '../hooks/useUser';\nimport './index.css';\n\nfunction ProfileRow({ param, value }) {\n  return (\n    <tr>\n      <td className=\"rq-param-cell\">{param}</td>\n      <td className=\"rq-value-cell\">{value}</td>\n    </tr>\n  );\n}\n\nexport function Profile() {\n  const { loading, data, error } = useUser();\n\n  if (loading) {\n    return <div className=\"rq-profile\">Loading...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"rq-profile\">\n        <div className=\"rq-error\">Oops! Something went wrong...</div>\n      </div>\n    );\n  }\n\n  const { name, email, phone, website, company } = data;\n\n  return (\n    <div className=\"rq-profile\">\n      <table>\n        <tbody>\n          <ProfileRow param=\"Name\" value={name} />\n          <ProfileRow param=\"Email\" value={email} />\n          <ProfileRow param=\"Phone\" value={phone} />\n          <ProfileRow\n            param=\"Website\"\n            value={<a href={'http://' + website}>{website}</a>}\n          />\n          <ProfileRow param=\"Company\" value={company.name} />\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useTodoList } from '../hooks/useTodoList';\nimport { Button } from 'components/Button';\nimport './index.css';\n\nfunction TodoRow({ number, data }) {\n  const { title, completed } = data;\n  return (\n    <tr>\n      <td>{number}</td>\n      <td>{title}</td>\n      <td>{completed && '\\u{2705}'}</td>\n    </tr>\n  );\n}\n\nexport function TodoList() {\n  const { loading, data, invalidate } = useTodoList();\n  const todos = loading ? [] : data;\n\n  const handleRefresh = () => {\n    invalidate();\n  };\n\n  return (\n    <div className=\"rq-todo-list\">\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            <th className=\"title\">Todos List</th>\n            <th>\n              <Button text=\"Refresh\" onClick={handleRefresh} />\n            </th>\n          </tr>\n          <tr>\n            <th>#</th>\n            <th>Title</th>\n            <th>Completed</th>\n          </tr>\n        </thead>\n        <tbody>\n          {todos.map((todo, index) => (\n            <TodoRow key={todo.id} number={index + 1} data={todo} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { QueryClient, QueryClientProvider } from 'react-query';\nimport { AppContextProvider } from './AppContext';\nimport { TopPanel } from './TopPanel';\nimport { Profile } from './Profile';\nimport { TodoList } from './TodoList';\n\nconst queryClient = new QueryClient();\n\n// NOTE: should be a default export in order to use dynamic import\nexport default function UsingReactQuery() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <AppContextProvider>\n        <TopPanel />\n        <Profile />\n        <TodoList />\n      </AppContextProvider>\n    </QueryClientProvider>\n  );\n}\n"],"names":["AppContext","createContext","useAppContext","useContext","AppContextProvider","children","useState","value","userId","setUserId","Provider","axiosInstance","axios","baseURL","queryFunction","queryKey","get","data","useRequest","useQuery","isLoading","error","queryClient","useQueryClient","loading","invalidate","useCallback","invalidateQueries","useUser","Avatar","initials","name","split","map","w","charAt","join","useUserInitials","className","UserName","email","useTodoList","TodoCounter","todoCount","length","fetchLastUpdated","Promise","resolve","Date","OPTIONS","refetchInterval","LastUpdated","useLastUpdated","formattedTime","toLocaleTimeString","RefreshAll","Button","text","onClick","TopPanel","ProfileRow","param","Profile","phone","website","company","href","TodoRow","number","title","completed","TodoList","todos","todo","index","id","QueryClient","UsingReactQuery","QueryClientProvider","client"],"sourceRoot":""}